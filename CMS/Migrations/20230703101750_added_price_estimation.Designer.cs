// <auto-generated />
using System;
using CMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230703101750_added_price_estimation")]
    partial class added_price_estimation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.Models.ComCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("FixedCost")
                        .HasColumnType("float");

                    b.Property<double>("HQCost")
                        .HasColumnType("float");

                    b.Property<double>("InsiderFee")
                        .HasColumnType("float");

                    b.Property<double>("OutsiderFee")
                        .HasColumnType("float");

                    b.Property<double>("tax")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ComCost", (string)null);
                });

            modelBuilder.Entity("CMS.Models.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("MaxVal")
                        .HasColumnType("float");

                    b.Property<double>("MinVal")
                        .HasColumnType("float");

                    b.Property<double>("Tariff")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MaxVal")
                        .IsUnique();

                    b.HasIndex("MinVal")
                        .IsUnique();

                    b.ToTable("Insurance", (string)null);
                });

            modelBuilder.Entity("CMS.Models.Packaging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("MaxL")
                        .HasColumnType("float");

                    b.Property<double>("MinL")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PackagingCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MaxL")
                        .IsUnique();

                    b.HasIndex("MinL")
                        .IsUnique();

                    b.ToTable("Packaging", (string)null);
                });

            modelBuilder.Entity("CMS.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NeighboringProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NeighboringProvinceId");

                    b.ToTable("provinces");
                });

            modelBuilder.Entity("CMS.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("شناسه کاربر");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("آدرس");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("ایمیل");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام و نام خانوادگی");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("کلمه عبور");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("شماره همراه");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("CMS.Models.WeightDist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("MaxWeight")
                        .HasColumnType("float");

                    b.Property<double>("MinWeight")
                        .HasColumnType("float");

                    b.Property<double>("NeighboringProvince")
                        .HasColumnType("float");

                    b.Property<double>("OtherProvince")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MaxWeight")
                        .IsUnique();

                    b.HasIndex("MinWeight")
                        .IsUnique();

                    b.ToTable("WeightDist", (string)null);
                });

            modelBuilder.Entity("CMS.Models.Province", b =>
                {
                    b.HasOne("CMS.Models.Province", "NeighboringProvince")
                        .WithMany()
                        .HasForeignKey("NeighboringProvinceId");

                    b.Navigation("NeighboringProvince");
                });
#pragma warning restore 612, 618
        }
    }
}
